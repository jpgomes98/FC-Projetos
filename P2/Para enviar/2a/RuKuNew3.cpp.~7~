#include <iostream>
#include <cmath>
#include <fstream>
#include <cstdlib>
#include "g2p2c3_header.h"

using namespace std;

using namespace forF;

using namespace forRK;

double RuKuNew3 (double* (*Fovm)(double, double[3], double[3]), double h, double t0, double x0[3], double v0[3])
{
  double k1_x, k2_x, k3_x, k4_x;
  double k1_v, k2_v, k3_v, k4_v;
  double t1;
      
  /* Cálculo dos declives do método Runge-Kutta */
  
   for (int i = 0; i < 3; i++)
    {
      
      k1_x = v0[i];
      k1_v = (*Fovm)(t0, x0[i], v0[i]);
      
      k2_x = v0[i] + (0.5) * h * k1_v;
      k2_v = (*Fovm)(t0 + 0.5 * h, x0[i] + (0.5) * h * k1_x, v0[i] + (0.5) * h * k1_v);
      
      k3_x = v0[i] + (0.5) * h * k2_v;
      k3_v = (*Fovm)(t0 + 0.5 * h, x0[i] + (0.5) * h * k2_x, v0[i] + (0.5) * h * k2_v);
      
      k4_x = v0[i] + h * k3_v;
      k4_v = (*Fovm)(t0 + h, x0[i] + h * k3_x, v0[i] + h * k3_v);


      x1[i] += (h/6.) * (k1_x + 2 * k2_x + 2 * k3_x + k4_x);
      v1[i] += (h/6.) * (k1_v + 2 * k2_v + 2 * k3_v + k4_v);
      
    }
  
  t1 = t0 + h;
  
  return t1;
}
